"use strict";var cov_12c6dkk864=function(){var path="C:\\Users\\Adeola PC\\Desktop\\BootCamp\\Banka\\server\\build\\test\\routes\\index.spec.js";var hash="c721d5b96380dfa73b740eef0752ec42352890f3";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Adeola PC\\Desktop\\BootCamp\\Banka\\server\\build\\test\\routes\\index.spec.js",statementMap:{"0":{start:{line:3,column:12},end:{line:3,column:27}},"1":{start:{line:5,column:13},end:{line:5,column:42}},"2":{start:{line:7,column:16},end:{line:7,column:36}},"3":{start:{line:9,column:17},end:{line:9,column:50}},"4":{start:{line:11,column:20},end:{line:11,column:61}},"5":{start:{line:13,column:21},end:{line:13,column:58}},"6":{start:{line:15,column:11},end:{line:15,column:31}},"7":{start:{line:17,column:12},end:{line:17,column:40}},"8":{start:{line:19,column:39},end:{line:19,column:93}},"9":{start:{line:21,column:0},end:{line:21,column:39}},"10":{start:{line:23,column:0},end:{line:242,column:3}},"11":{start:{line:24,column:17},end:{line:24,column:38}},"12":{start:{line:25,column:2},end:{line:29,column:5}},"13":{start:{line:26,column:4},end:{line:28,column:7}},"14":{start:{line:27,column:6},end:{line:27,column:53}},"15":{start:{line:31,column:2},end:{line:38,column:5}},"16":{start:{line:32,column:4},end:{line:37,column:7}},"17":{start:{line:35,column:6},end:{line:35,column:53}},"18":{start:{line:36,column:6},end:{line:36,column:71}},"19":{start:{line:40,column:2},end:{line:47,column:5}},"20":{start:{line:41,column:4},end:{line:46,column:7}},"21":{start:{line:44,column:6},end:{line:44,column:53}},"22":{start:{line:45,column:6},end:{line:45,column:74}},"23":{start:{line:49,column:2},end:{line:57,column:5}},"24":{start:{line:50,column:4},end:{line:56,column:7}},"25":{start:{line:54,column:6},end:{line:54,column:53}},"26":{start:{line:55,column:6},end:{line:55,column:64}},"27":{start:{line:59,column:2},end:{line:68,column:5}},"28":{start:{line:60,column:4},end:{line:67,column:7}},"29":{start:{line:65,column:6},end:{line:65,column:53}},"30":{start:{line:66,column:6},end:{line:66,column:77}},"31":{start:{line:70,column:2},end:{line:78,column:5}},"32":{start:{line:71,column:4},end:{line:77,column:7}},"33":{start:{line:75,column:6},end:{line:75,column:53}},"34":{start:{line:76,column:6},end:{line:76,column:69}},"35":{start:{line:79,column:2},end:{line:87,column:5}},"36":{start:{line:80,column:4},end:{line:86,column:7}},"37":{start:{line:84,column:6},end:{line:84,column:53}},"38":{start:{line:85,column:6},end:{line:85,column:69}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:19,column:9},end:{line:19,column:31}},loc:{start:{line:19,column:37},end:{line:19,column:95}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:25},end:{line:23,column:26}},loc:{start:{line:23,column:37},end:{line:242,column:1}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:25,column:61},end:{line:25,column:62}},loc:{start:{line:25,column:73},end:{line:29,column:3}},line:25},"3":{name:"(anonymous_3)",decl:{start:{line:26,column:173},end:{line:26,column:174}},loc:{start:{line:26,column:198},end:{line:28,column:5}},line:26},"4":{name:"(anonymous_4)",decl:{start:{line:31,column:58},end:{line:31,column:59}},loc:{start:{line:31,column:70},end:{line:38,column:3}},line:31},"5":{name:"(anonymous_5)",decl:{start:{line:34,column:11},end:{line:34,column:12}},loc:{start:{line:34,column:38},end:{line:37,column:5}},line:34},"6":{name:"(anonymous_6)",decl:{start:{line:40,column:61},end:{line:40,column:62}},loc:{start:{line:40,column:73},end:{line:47,column:3}},line:40},"7":{name:"(anonymous_7)",decl:{start:{line:43,column:11},end:{line:43,column:12}},loc:{start:{line:43,column:38},end:{line:46,column:5}},line:43},"8":{name:"(anonymous_8)",decl:{start:{line:49,column:63},end:{line:49,column:64}},loc:{start:{line:49,column:75},end:{line:57,column:3}},line:49},"9":{name:"(anonymous_9)",decl:{start:{line:53,column:11},end:{line:53,column:12}},loc:{start:{line:53,column:38},end:{line:56,column:5}},line:53},"10":{name:"(anonymous_10)",decl:{start:{line:59,column:55},end:{line:59,column:56}},loc:{start:{line:59,column:67},end:{line:68,column:3}},line:59},"11":{name:"(anonymous_11)",decl:{start:{line:64,column:11},end:{line:64,column:12}},loc:{start:{line:64,column:38},end:{line:67,column:5}},line:64},"12":{name:"(anonymous_12)",decl:{start:{line:70,column:61},end:{line:70,column:62}},loc:{start:{line:70,column:73},end:{line:78,column:3}},line:70},"13":{name:"(anonymous_13)",decl:{start:{line:74,column:11},end:{line:74,column:12}},loc:{start:{line:74,column:38},end:{line:77,column:5}},line:74},"14":{name:"(anonymous_14)",decl:{start:{line:79,column:68},end:{line:79,column:69}},loc:{start:{line:79,column:80},end:{line:87,column:3}},line:79},"15":{name:"(anonymous_15)",decl:{start:{line:83,column:11},end:{line:83,column:12}},loc:{start:{line:83,column:38},end:{line:86,column:5}},line:83}},branchMap:{"0":{loc:{start:{line:19,column:46},end:{line:19,column:92}},type:"cond-expr",locations:[{start:{line:19,column:70},end:{line:19,column:73}},{start:{line:19,column:76},end:{line:19,column:92}}],line:19},"1":{loc:{start:{line:19,column:46},end:{line:19,column:67}},type:"binary-expr",locations:[{start:{line:19,column:46},end:{line:19,column:49}},{start:{line:19,column:53},end:{line:19,column:67}}],line:19}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var _chai=(cov_12c6dkk864.s[0]++,require("chai"));var _chai2=(cov_12c6dkk864.s[1]++,_interopRequireDefault(_chai));var _chaiHttp=(cov_12c6dkk864.s[2]++,require("chai-http"));var _chaiHttp2=(cov_12c6dkk864.s[3]++,_interopRequireDefault(_chaiHttp));var _dbController=(cov_12c6dkk864.s[4]++,require("../../controllers/dbController"));var _dbController2=(cov_12c6dkk864.s[5]++,_interopRequireDefault(_dbController));var _app=(cov_12c6dkk864.s[6]++,require("../../app"));var _app2=(cov_12c6dkk864.s[7]++,_interopRequireDefault(_app));function _interopRequireDefault(obj){cov_12c6dkk864.f[0]++;cov_12c6dkk864.s[8]++;return(cov_12c6dkk864.b[1][0]++,obj)&&(cov_12c6dkk864.b[1][1]++,obj.__esModule)?(cov_12c6dkk864.b[0][0]++,obj):(cov_12c6dkk864.b[0][1]++,{default:obj});}cov_12c6dkk864.s[9]++;_chai2.default.use(_chaiHttp2.default);cov_12c6dkk864.s[10]++;describe("Sign in test",function(){cov_12c6dkk864.f[1]++;var endpoint=(cov_12c6dkk864.s[11]++,"/api/v1/auth/signin");cov_12c6dkk864.s[12]++;it("should not login a user when there are no parameters",function(){cov_12c6dkk864.f[2]++;cov_12c6dkk864.s[13]++;_chai2.default.request(_app2.default).post(endpoint).set("authorization","Bearer "+_dbController2.default.findOneUser("email","user5@gmail.com").token).send({}).end(function(err,response){cov_12c6dkk864.f[3]++;cov_12c6dkk864.s[14]++;(0,_chai.expect)(response).have.a.status(400);});});cov_12c6dkk864.s[15]++;it("should not login a user when the email is missing",function(){cov_12c6dkk864.f[4]++;cov_12c6dkk864.s[16]++;_chai2.default.request(_app2.default).post(endpoint).set("authorization","Bearer "+_dbController2.default.findOneUser("email","user5@gmail.com").token).send({password:"password"}).end(function(error,response){cov_12c6dkk864.f[5]++;cov_12c6dkk864.s[17]++;(0,_chai.expect)(response).have.a.status(400);cov_12c6dkk864.s[18]++;(0,_chai.expect)(response.text).to.include("email is required");});});cov_12c6dkk864.s[19]++;it("should not login a user when the password is missing",function(){cov_12c6dkk864.f[6]++;cov_12c6dkk864.s[20]++;_chai2.default.request(_app2.default).post(endpoint).set("authorization","Bearer "+_dbController2.default.findOneUser("email","user5@gmail.com").token).send({email:"user5@gmail.com"}).end(function(error,response){cov_12c6dkk864.f[7]++;cov_12c6dkk864.s[21]++;(0,_chai.expect)(response).have.a.status(400);cov_12c6dkk864.s[22]++;(0,_chai.expect)(response.text).to.include("password is required");});});cov_12c6dkk864.s[23]++;it("'should login a user when all the parameters are given",function(){cov_12c6dkk864.f[8]++;cov_12c6dkk864.s[24]++;_chai2.default.request(_app2.default).post(endpoint).set("authorization","Bearer "+_dbController2.default.findOneUser("email","user1@gmail.com").token).send({email:"user1@gmail.com",password:"password"}).end(function(error,response){cov_12c6dkk864.f[9]++;cov_12c6dkk864.s[25]++;(0,_chai.expect)(response).have.a.status(200);cov_12c6dkk864.s[26]++;(0,_chai.expect)(response.body).to.have.property("data");});});cov_12c6dkk864.s[27]++;it("should not login a user with wrong credentials",function(){cov_12c6dkk864.f[10]++;cov_12c6dkk864.s[28]++;_chai2.default.request(_app2.default).post(endpoint).set("authorization","Bearer "+_dbController2.default.findOneUser("email","user5@gmail.com").token).send({email:"user5@gmail.com",password:"password",name:"fdkjnjn"}).end(function(error,response){cov_12c6dkk864.f[11]++;cov_12c6dkk864.s[29]++;(0,_chai.expect)(response).have.a.status(400);cov_12c6dkk864.s[30]++;(0,_chai.expect)(response.body.error).to.equal("name is not allowed");});});cov_12c6dkk864.s[31]++;it("should not login a user with wrong credentials-email",function(){cov_12c6dkk864.f[12]++;cov_12c6dkk864.s[32]++;_chai2.default.request(_app2.default).post(endpoint).set("authorization","Bearer "+_dbController2.default.findOneUser("email","user5@gmail.com").token).send({email:"use@gmail.com",password:"password"}).end(function(error,response){cov_12c6dkk864.f[13]++;cov_12c6dkk864.s[33]++;(0,_chai.expect)(response).have.a.status(401);cov_12c6dkk864.s[34]++;(0,_chai.expect)(response.body.error).to.equal("Auth failed");});});cov_12c6dkk864.s[35]++;it("should not be able to login with wrong credentials-password",function(){cov_12c6dkk864.f[14]++;cov_12c6dkk864.s[36]++;_chai2.default.request(_app2.default).post(endpoint).set("authorization","Bearer "+_dbController2.default.findOneUser("email","user5@gmail.com").token).send({email:"user5@gmail.com",password:"pasword"}).end(function(error,response){cov_12c6dkk864.f[15]++;cov_12c6dkk864.s[37]++;(0,_chai.expect)(response).have.a.status(401);cov_12c6dkk864.s[38]++;(0,_chai.expect)(response.body.error).to.equal("Auth failed");});});//   it("should generate token", function () {
//     _chai2.default.request(_app2.default).post(endpoint).set("authorization", "Bearer " + _dbController2.default.findOneUser("email", "user5@gmail.com").token).send({
//       email: "user5@gmail.com",
//       password: "password"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(200);
//       (0, _chai.expect)(response.body.data).to.have.property("token");
//     });
//   });
//   it("should signin staff", function () {
//     _chai2.default.request(_app2.default).post(endpoint)
//     // .set("authorization", `Bearer ${data.findOneUser("email", "user5@gmail.com").token}`)
//     .send({
//       email: "staff5@gmail.com",
//       password: "password"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(200);
//       (0, _chai.expect)(response.body.data).to.have.property("token");
//     });
//   });
// });
// describe("Sign up test", function () {
//   var endpoint = "/api/v1/auth/signup";
//   it("should not signup a user when there are no parameters", function () {
//     _chai2.default.request(_app2.default).post(endpoint).send({}).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(400);
//     });
//   });
//   it("should not register a user when the email is missing", function () {
//     _chai2.default.request(_app2.default).post(endpoint).send({
//       firstName: "Second",
//       lastName: "Name",
//       password: "password",
//       confirmPassword: "password"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(400);
//       (0, _chai.expect)(response.text).to.include("email is required");
//     });
//   });
//   it("should not register a user when the email already exist", function () {
//     _chai2.default.request(_app2.default).post(endpoint).send({
//       firstName: "Second",
//       lastName: "Nme",
//       email: "user5@gmail.com",
//       password: "password",
//       confirmPassword: "password"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(400);
//       (0, _chai.expect)(response.body.error).to.equal("email already exist");
//     });
//   });
//   it("should not register a user when the password is missing", function () {
//     _chai2.default.request(_app2.default).post(endpoint).send({
//       firstName: "Second",
//       lastName: "BAse",
//       email: "user2@gmail.com",
//       confirmPassword: "password"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(400);
//       (0, _chai.expect)(response.text).to.include("password is required");
//     });
//   });
//   it("should not register a user when the first name is invalid", function () {
//     _chai2.default.request(_app2.default).post(endpoint).send({
//       firstName: "SThdfghdbjdkhbfjdhsjhbsjhvsbjhbvdjslshbjkdhbskhbvdkjbvfdhbjdird",
//       lastName: "Gone",
//       email: "user2@gmail.com",
//       password: "password",
//       confirmPassword: "password"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(400);
//       (0, _chai.expect)(response.text).to.include("Invalid first name");
//     });
//   });
//   it("should not register a user when the last name is invalid", function () {
//     _chai2.default.request(_app2.default).post(endpoint).send({
//       firstName: "SThird",
//       lastName: "iS",
//       email: "sdf@gmail.com",
//       password: "password",
//       confirmPassword: "password"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(400);
//       (0, _chai.expect)(response.text).to.include("Invalid last name");
//     });
//   });
//   it("should not register a user when the first name is missing", function () {
//     _chai2.default.request(_app2.default).post(endpoint).send({
//       lastName: "Gone",
//       email: "user2@gmail.com",
//       password: "password",
//       confirmPassword: "password"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(400);
//       (0, _chai.expect)(response.text).to.include("first name is required");
//     });
//   });
//   it("should not register a user when the last name is missing", function () {
//     _chai2.default.request(_app2.default).post(endpoint).send({
//       firstName: "SThird",
//       email: "sdf@gmail.com",
//       password: "password",
//       confirmPassword: "password"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(400);
//       (0, _chai.expect)(response.text).to.include("last name is required");
//     });
//   });
//   it("should not register a user when the the passwords dont match", function () {
//     _chai2.default.request(_app2.default).post(endpoint).send({
//       firstName: "Second",
//       lastName: "Game",
//       email: "user2@gmail.com",
//       password: "password",
//       confirmPassword: "pasword"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(400);
//       (0, _chai.expect)(response.body.error).to.include("confirm password does not match expected value");
//     });
//   });
//   it("should not register a user when the confirm password is not given", function () {
//     _chai2.default.request(_app2.default).post(endpoint).send({
//       firstName: "Fourth",
//       lastName: "wskjf",
//       email: "user3@gmail.com",
//       password: "password"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).have.a.status(400);
//       (0, _chai.expect)(response.text).to.include("confirm password is required");
//     });
//   });
//   it("'should register a new user when all the parameters are given", function () {
//     _chai2.default.request(_app2.default).post(endpoint).send({
//       firstName: "Forth",
//       lastName: "Desth",
//       email: "user3@gmail.com",
//       password: "password",
//       confirmPassword: "password"
//     }).end(function (error, response) {
//       (0, _chai.expect)(response).to.have.status(201);
//       (0, _chai.expect)(response.body.data).to.have.property("token");
//       (0, _chai.expect)(response.body.data).to.have.property("id");
//     });
//   });
});